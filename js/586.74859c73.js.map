{"version":3,"sources":["webpack://site/../zarm/src/progress/demo.md"],"names":[],"mappings":"yGAAA","file":"js/586.74859c73.js","sourcesContent":["export default \"# Progress 进度条\\n\\n## 基本用法\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Progress, Cell, Select, Radio, Stepper } from 'zarm';\\n\\nconst Demo = () => {\\n  const [percent, setPercent] = useState(10);\\n  const [theme, setTheme] = useState('primary');\\n  const [strokeShape, setStrokeShape] = useState('round');\\n  const [strokeWidth, setStrokeWidth] = useState('');\\n\\n  return (\\n    <>\\n      <div className=\\\"progress\\\">\\n        <Progress\\n          shape=\\\"line\\\"\\n          percent={percent}\\n          theme={theme}\\n          strokeShape={strokeShape}\\n          strokeWidth={strokeWidth}\\n        />\\n      </div>\\n      <div className=\\\"progress\\\">\\n        <Progress\\n          shape=\\\"circle\\\"\\n          percent={percent}\\n          theme={theme}\\n          strokeShape={strokeShape}\\n          strokeWidth={strokeWidth}\\n          text={(percent) => (\\n            <div className=\\\"progress-content\\\">\\n              <span className=\\\"progress-text\\\">{percent}</span>\\n              <span className=\\\"progress-percent\\\">%</span>\\n            </div>\\n          )}\\n        />\\n      </div>\\n      <div className=\\\"progress\\\">\\n        <Progress\\n          shape=\\\"semi-circle\\\"\\n          percent={percent}\\n          theme={theme}\\n          strokeShape={strokeShape}\\n          strokeWidth={strokeWidth}\\n          text={(percent) => (\\n            <div className=\\\"progress-content\\\">\\n              <span className=\\\"progress-text\\\">{percent}</span>\\n              <span className=\\\"progress-percent\\\">%</span>\\n            </div>\\n          )}\\n        />\\n      </div>\\n\\n      <Cell title=\\\"进度\\\">\\n        <Stepper\\n          step={10}\\n          min={0}\\n          max={100}\\n          value={percent}\\n          onChange={(value) => {\\n            if (Number.isNaN(Number(value))) return;\\n            setPercent(value);\\n          }}\\n        />\\n      </Cell>\\n\\n      <Cell title=\\\"主题\\\">\\n        <Select\\n          value={theme}\\n          dataSource={[\\n            { value: 'primary', label: 'primary' },\\n            { value: 'success', label: 'success' },\\n            { value: 'warning', label: 'warning' },\\n            { value: 'danger', label: 'danger' },\\n          ]}\\n          onOk={(selected) => setTheme(selected[0].value)}\\n        />\\n      </Cell>\\n\\n      <Cell title=\\\"线条形状\\\">\\n        <Radio.Group compact type=\\\"button\\\" value={strokeShape} onChange={setStrokeShape}>\\n          <Radio value=\\\"round\\\">round</Radio>\\n          <Radio value=\\\"rect\\\">rect</Radio>\\n        </Radio.Group>\\n      </Cell>\\n\\n      <Cell title=\\\"线条粗细\\\">\\n        <Stepper\\n          step={1}\\n          min={0}\\n          value={strokeWidth}\\n          onChange={(value) => {\\n            if (Number.isNaN(Number(value))) return;\\n            setStrokeWidth(value);\\n          }}\\n        />\\n      </Cell>\\n    </>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## API\\n\\n| 属性        | 类型                            | 默认值                       | 说明                                                                      |\\n| :---------- | :------------------------------ | :--------------------------- | :------------------------------------------------------------------------ |\\n| theme       | string                          | 'primary'                    | 主题，可选值 `primary`, `success`, `warning`, `danger`                    |\\n| size        | string                          | 'md'                         | 大小，可选值 `lg`, `md`, `sm`，number 类型的值，或者任何合法的 css 宽度值 |\\n| shape       | string                          | 'line'                       | 形状，可选值 `line`, `circle`, `semi-circle`                              |\\n| percent     | number                          | 0                            | 进度百分比（范围：0 ～ 100）                                              |\\n| text        | (percent?: number) => ReactNode | (percent) => \\\\`${percent}%\\\\` | 进度文本显示                                                              |\\n| strokeShape | string                          | 'round'                      | 线条形状，可选值 `round`, `rect`                                          |\\n| strokeWidth | number                          | -                            | 线条粗细，单位: px，不设置则根据大小自动调整                              |\\n\";"],"sourceRoot":""}