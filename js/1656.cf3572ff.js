"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1656],{41656:function(n,e,t){t.r(e),e.default="# ActionSheet 动作面板\n\n## 基本用法\n\n```jsx\nimport { useState, useRef } from 'react';\nimport { ActionSheet, List, Button } from 'zarm';\n\nconst BUTTONS = [\n  {\n    text: 'Action 1',\n    onClick: () => console.log('Clicked action 1'),\n  },\n  {\n    theme: 'default',\n    text: 'Action 2',\n    onClick: () => console.log('Clicked action 2'),\n  },\n  {\n    theme: 'danger',\n    text: 'Action 3',\n    onClick: () => console.log('Clicked action 3'),\n  },\n  {\n    disabled: true,\n    text: 'Disabled Action',\n    onClick: () => console.log('Clicked disabled action'),\n  },\n];\n\nconst Demo = () => {\n  const containerRef = useRef();\n  const [visible1, setVisible1] = useState(false);\n  const [visible2, setVisible2] = useState(false);\n  const [visible3, setVisible3] = useState(false);\n  const [visible4, setVisible4] = useState(false);\n\n  return (\n    <>\n      <List>\n        <List.Item\n          title=\"普通\"\n          suffix={\n            <Button size=\"xs\" onClick={() => setVisible1(true)}>\n              开启\n            </Button>\n          }\n        />\n        <List.Item\n          title=\"带取消操作\"\n          suffix={\n            <Button size=\"xs\" onClick={() => setVisible2(true)}>\n              开启\n            </Button>\n          }\n        />\n        <List.Item\n          title=\"圆角、留边\"\n          suffix={\n            <Button size=\"xs\" onClick={() => setVisible3(true)}>\n              开启\n            </Button>\n          }\n        />\n        <List.Item\n          title=\"指定挂载节点\"\n          suffix={\n            <Button size=\"xs\" onClick={() => setVisible4(true)}>\n              开启\n            </Button>\n          }\n        />\n      </List>\n\n      <div ref={containerRef} />\n\n      <ActionSheet\n        visible={visible1}\n        actions={BUTTONS}\n        onMaskClick={() => setVisible1(!visible1)}\n      />\n      <ActionSheet\n        visible={visible2}\n        actions={BUTTONS}\n        onMaskClick={() => setVisible2(!visible2)}\n        onCancel={() => setVisible2(!visible2)}\n      />\n      <ActionSheet\n        spacing\n        visible={visible3}\n        actions={BUTTONS}\n        onMaskClick={() => setVisible3(!visible3)}\n        onCancel={() => setVisible3(!visible3)}\n      />\n      <ActionSheet\n        visible={visible4}\n        actions={BUTTONS}\n        onMaskClick={() => setVisible4(!visible4)}\n        mountContainer={containerRef.current}\n      />\n    </>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## 异步操作\n\n```jsx\nimport { useState, useRef } from 'react';\nimport { ActionSheet, List, Button } from 'zarm';\n\nconst BUTTONS = [\n  {\n    text: 'Action 1',\n  },\n  {\n    text: 'Action 2',\n  },\n  {\n    theme: 'danger',\n    text: 'Action 3',\n  },\n  {\n    disabled: true,\n    text: 'Disabled Action',\n  },\n];\n\nconst Demo = () => {\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <>\n      <List>\n        <List.Item\n          title=\"普通\"\n          suffix={\n            <Button size=\"xs\" onClick={() => setVisible(true)}>\n              开启\n            </Button>\n          }\n        />\n      </List>\n\n      <ActionSheet\n        visible={visible}\n        onMaskClick={() => setVisible(false)}\n        actions={BUTTONS}\n        onAction={async (action, index) => {\n          // 模拟异步操作\n          await new Promise((resolve) => setTimeout(resolve, 3000));\n          console.log(action);\n          setVisible(false);\n        }}\n      />\n    </>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## 指令式\n\n```jsx\nimport { ActionSheet, List, Button } from 'zarm';\n\nconst BUTTONS = [\n  {\n    text: 'Action 1',\n    onClick: () => console.log('Clicked action 1'),\n  },\n  {\n    theme: 'default',\n    text: 'Action 2',\n    onClick: () => console.log('Clicked action 2'),\n  },\n  {\n    theme: 'danger',\n    text: 'Action 3',\n    onClick: () => console.log('Clicked action 3'),\n  },\n  {\n    disabled: true,\n    text: 'Disabled Action',\n    onClick: () => console.log('Clicked disabled action'),\n  },\n];\n\nconst Demo = () => {\n  return (\n    <List>\n      <List.Item\n        title=\"普通\"\n        suffix={\n          <Button\n            size=\"xs\"\n            onClick={() => {\n              const { close } = ActionSheet.show({\n                spacing: true,\n                actions: BUTTONS,\n                onMaskClick: () => {\n                  close();\n                },\n                onCancel: () => {\n                  close();\n                },\n              });\n            }}\n          >\n            开启\n          </Button>\n        }\n      />\n    </List>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| 属性           | 类型                                                                     | 默认值              | 说明                               |\n| :------------- | :----------------------------------------------------------------------- | :------------------ | :--------------------------------- |\n| visible        | boolean                                                                  | false               | 是否显示                           |\n| spacing        | boolean                                                                  | false               | 是否和外部有间距                   |\n| destroy        | boolean                                                                  | true                | 弹层关闭后是否移除节点             |\n| actions        | Action[]                                                                 | []                  | 面板选项列表                       |\n| onMaskClick    | () => void                                                               | -                   | 点击遮罩层时触发的回调函数         |\n| onCancel       | () => void                                                               | -                   | 显示取消菜单，点击时触发的回调函数 |\n| onAction       | (action: ActionSheetItemProps, index: number) => void \\| Promise\\<void\\> | -                   | 点击面板选项后触发的函数           |\n| cancelText     | string                                                                   | '取消'              | 取消菜单的文案                     |\n| safeArea       | boolean                                                                  | false               | 是否适配安全区域                   |\n| afterClose     | () => void                                                               | -                   | ActionSheet 隐藏后的回调函数       |\n| mountContainer | MountContainer                                                           | () => document.body | 指定 ActionSheet 挂载的 HTML 节点  |\n\n### ActionSheetItemProps\n\n| 属性      | 类型       | 默认值    | 说明                                            |\n| :-------- | :--------- | :-------- | :---------------------------------------------- |\n| text      | ReactNode  | -         | 按钮文字                                        |\n| theme     | string     | 'default' | 按钮主题，可选值 `default`、`primary`、`danger` |\n| disabled  | boolean    | false     | 按钮是否禁用                                    |\n| className | string     | -         | 追加类名                                        |\n| onClick   | () => void | -         | 按钮点击后触发的回调函数                        |\n\n## CSS 变量\n\n| 属性                           | 默认值                        | 说明               |\n| :----------------------------- | :---------------------------- | :----------------- |\n| --background                   | '#fff'                        | 背景色             |\n| --border-radius                | '14px'                        | 圆角大小           |\n| --spacing-margin               | '8px'                         | 边距               |\n| --item-height                  | '56px'                        | 选项高度           |\n| --item-font-size               | '20px'                        | 选项字体大小       |\n| --item-font-weight             | 500                           | 选项字体粗细       |\n| --item-text-color              | 'var(--za-theme-primary)'     | 选项字体色         |\n| --item-active-background | 'var(--za-background-active)' | 选项选中背景   |\n| --item-opacity-disabled        | 'var(--za-opacity-disabled)'  | 选项禁用不透明度   |\n| --cancel-text-color            | 'var(--za-theme-primary)'     | 取消选项字体大小   |\n| --cancel-margin-top            | '8px'                         | 取消选项上边距大小 |\n"}}]);