{"version":3,"sources":["webpack://site/../zarm/src/input/demo.md"],"names":[],"mappings":"0GAAA","file":"js/9109.29464fb9.js","sourcesContent":["export default \"# Input 文本框\\n\\n## 基本用法\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Input, Cell } from 'zarm';\\n\\nconst Demo = () => {\\n  const [title, setTitle] = useState('');\\n  const [content, setContent] = useState('');\\n\\n  return (\\n    <>\\n      <Cell title=\\\"单行文本\\\">\\n        <Input\\n          clearable\\n          type=\\\"text\\\"\\n          placeholder=\\\"请输入\\\"\\n          value={title}\\n          onChange={(value) => {\\n            setTitle(value);\\n            console.log(`onChange: ${value}`);\\n          }}\\n          onBlur={(value) => console.log(`onBlur: ${value}`)}\\n        />\\n      </Cell>\\n      <Cell title=\\\"多行文本\\\">\\n        <Input\\n          rows={3}\\n          type=\\\"text\\\"\\n          placeholder=\\\"请输入\\\"\\n          value={content}\\n          onChange={setContent}\\n        />\\n      </Cell>\\n    </>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 输入类型\\n\\n```jsx\\nimport { useState, useRef } from 'react';\\nimport { Input, Cell, Button } from 'zarm';\\n\\nconst Demo = () => {\\n  const focusInput = useRef();\\n  const [value, setValue] = useState('');\\n\\n  return (\\n    <>\\n      <Cell title=\\\"数字\\\">\\n        <Input\\n          ref={focusInput}\\n          type=\\\"number\\\"\\n          placeholder=\\\"type is number\\\"\\n          value={value}\\n          onChange={setValue}\\n        />\\n      </Cell>\\n\\n      <Cell title=\\\"金额\\\">\\n        <Input type=\\\"price\\\" placeholder=\\\"type is price\\\" defaultValue={value} />\\n      </Cell>\\n\\n      <Cell title=\\\"身份证\\\">\\n        <Input type=\\\"idcard\\\" placeholder=\\\"type is idcard\\\" />\\n      </Cell>\\n\\n      <Cell>\\n        <Button size=\\\"xs\\\" theme=\\\"primary\\\" onClick={() => focusInput.current.focus()}>\\n          click to focus the first input\\n        </Button>\\n      </Cell>\\n    </>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 只读 / 禁用状态\\n\\n```jsx\\nimport { Input, Cell } from 'zarm';\\n\\nReactDOM.render(\\n  <>\\n    <Cell title=\\\"单行文本\\\">\\n      <Input readOnly type=\\\"text\\\" defaultValue=\\\"我是只读状态\\\" />\\n    </Cell>\\n    <Cell title=\\\"单行文本\\\">\\n      <Input disabled type=\\\"text\\\" value=\\\"我是禁用状态\\\" />\\n    </Cell>\\n    <Cell title=\\\"多行文本\\\">\\n      <Input\\n        readOnly\\n        type=\\\"text\\\"\\n        rows={3}\\n        value=\\\"我是只读状态，我是只读状态，我是只读状态，我是只读状态。\\\"\\n      />\\n    </Cell>\\n    <Cell title=\\\"多行文本\\\">\\n      <Input\\n        disabled\\n        type=\\\"text\\\"\\n        rows={3}\\n        value=\\\"我是禁用状态，我是禁用状态，我是禁用状态，我是禁用状态。\\\"\\n      />\\n    </Cell>\\n  </>,\\n  mountNode,\\n);\\n```\\n\\n## 无标签栏\\n\\n```jsx\\nimport { Input, Cell } from 'zarm';\\n\\nReactDOM.render(\\n  <>\\n    <Cell>\\n      <Input type=\\\"text\\\" placeholder=\\\"标题\\\" />\\n    </Cell>\\n    <Cell>\\n      <Input autoHeight type=\\\"text\\\" rows={4} maxLength={200} placeholder=\\\"摘要\\\" />\\n    </Cell>\\n  </>,\\n  mountNode,\\n);\\n```\\n\\n## 高度自适应\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Input, Cell } from 'zarm';\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState('');\\n\\n  return (\\n    <Cell title=\\\"多行文本\\\">\\n      <Input\\n        autoHeight\\n        type=\\\"text\\\"\\n        rows={3}\\n        placeholder=\\\"请输入\\\"\\n        value={value}\\n        onChange={setValue}\\n      />\\n    </Cell>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 显示输入字数\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Input, Cell } from 'zarm';\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState('');\\n\\n  return (\\n    <Cell title=\\\"多行文本\\\">\\n      <Input\\n        autoHeight\\n        showLength\\n        maxLength={200}\\n        type=\\\"text\\\"\\n        rows={3}\\n        placeholder=\\\"请输入\\\"\\n        value={value}\\n        onChange={setValue}\\n      />\\n    </Cell>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## API\\n\\n| 属性         | 类型                               | 默认值 | 说明                                                                                                                    |\\n| :----------- | :--------------------------------- | :----- | :---------------------------------------------------------------------------------------------------------------------- |\\n| type         | string                             | 'text' | 类型，可选值 `text`、`number`、`idcard`、`price`、`password`、`search`                                                  |\\n| value        | number \\\\| string                   | -      | 值                                                                                                                      |\\n| defaultValue | number \\\\| string                   | -      | 初始值                                                                                                                  |\\n| disabled     | boolean                            | false  | 是否禁用                                                                                                                |\\n| readOnly     | boolean                            | false  | 是否只读                                                                                                                |\\n| rows         | number                             | -      | 多行文本时的显示行数。type 为 text 类型时有效。                                                                         |\\n| autoHeight   | boolean                            | false  | 是否高度自适应                                                                                                          |\\n| maxLength    | number                             | -      | 输入字数上限                                                                                                            |\\n| showLength   | boolean                            | false  | 是否显示输入字数。多行文本（type=\\\"text\\\"且包含 rows 属性）时有效。                                                       |\\n| clearable    | boolean                            | true   | 是否显示清除按钮。多行文本（type=\\\"text\\\"且包含 rows 属性）时无效。必须为受控组件（属性包含 value、onChange）时方可生效。 |\\n| onChange     | (value?: number \\\\| string) => void | -      | 值变化时触发的回调函数                                                                                                  |\\n\";"],"sourceRoot":""}