{"version":3,"file":"js/9109.a0f9cab2.js","mappings":"0GAAA","sources":["webpack://site/../zarm/src/input/demo.md"],"sourcesContent":["export default \"# Input 文本框\\n\\n## 基本用法\\n\\n```jsx\\nimport { useState, useRef } from 'react';\\nimport { Input, List, Button } from 'zarm';\\n\\nconst Demo = () => {\\n  const focusInput = useRef();\\n  const [title, setTitle] = useState('');\\n  const [content, setContent] = useState('');\\n\\n  return (\\n    <List>\\n      <List.Item title=\\\"单行文本\\\">\\n        <Input\\n          ref={focusInput}\\n          placeholder=\\\"请输入\\\"\\n          value={title}\\n          onChange={(e) => {\\n            setTitle(e.target.value);\\n            console.log(`onChange: ${e.target.value}`);\\n          }}\\n        />\\n      </List.Item>\\n      <List.Item title=\\\"多行文本\\\">\\n        <Input\\n          rows={3}\\n          placeholder=\\\"请输入\\\"\\n          value={content}\\n          onChange={(e) => {\\n            setContent(e.target.value);\\n          }}\\n        />\\n      </List.Item>\\n      <List.Item>\\n        <Button\\n          size=\\\"xs\\\"\\n          theme=\\\"primary\\\"\\n          onClick={() => {\\n            focusInput.current.focus();\\n          }}\\n        >\\n          click to focus the first input\\n        </Button>\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 带清除按钮\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Input, List } from 'zarm';\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState('');\\n\\n  return (\\n    <List>\\n      <List.Item title=\\\"单行文本\\\">\\n        <Input\\n          clearable\\n          placeholder=\\\"输入后右侧可见清除按钮\\\"\\n          value={value}\\n          onChange={(e) => {\\n            setValue(e.target.value);\\n            console.log(`onChange: ${e.target.value}`);\\n          }}\\n        />\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 原生类型\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Input, List, Icon } from 'zarm';\\n\\nconst PreviewIcon = Icon.createFromIconfont('//lf1-cdn-tos.bytegoofy.com/obj/iconpark/svg_20337_14.627ee457cf7594fbbce6d5e14b8c29ef.js');\\n\\nconst Demo = () => {\\n  const [password, setPassword] = useState('');\\n  const [value, setValue] = useState('');\\n  const [visible, setVisible] = useState(false);\\n\\n  return (\\n    <List>\\n      <List.Item\\n        title=\\\"密码输入\\\"\\n        suffix={visible\\n          ? <PreviewIcon type=\\\"preview-open\\\" onClick={() => setVisible(!visible)} />\\n          : <PreviewIcon type=\\\"preview-close\\\" onClick={() => setVisible(!visible)} />\\n        }\\n      >\\n        <Input\\n          type={visible ? 'text' : 'password'}\\n          placeholder=\\\"请输入\\\"\\n          value={password}\\n          onChange={(e) => {\\n            setPassword(e.target.value);\\n          }}\\n        />\\n      </List.Item>\\n      <List.Item title=\\\"搜索框\\\">\\n        <Input\\n          type=\\\"search\\\"\\n          placeholder=\\\"请输入\\\"\\n          value={value}\\n          onChange={(e) => {\\n            setValue(e.target.value);\\n          }}\\n        />\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 只读状态\\n\\n```jsx\\nimport { Input, List } from 'zarm';\\n\\nReactDOM.render(\\n  <List>\\n    <List.Item title=\\\"单行文本\\\">\\n      <Input readOnly defaultValue=\\\"我是只读状态\\\" />\\n    </List.Item>\\n    <List.Item title=\\\"多行文本\\\">\\n      <Input readOnly rows={3} value=\\\"我是只读状态，我是只读状态，我是只读状态，我是只读状态。\\\" />\\n    </List.Item>\\n  </List>,\\n  mountNode,\\n);\\n```\\n\\n## 禁用状态\\n\\n```jsx\\nimport { Input, List } from 'zarm';\\n\\nReactDOM.render(\\n  <List>\\n    <List.Item title=\\\"单行文本\\\">\\n      <Input disabled value=\\\"我是禁用状态\\\" />\\n    </List.Item>\\n    <List.Item title=\\\"多行文本\\\">\\n      <Input disabled rows={3} value=\\\"我是禁用状态，我是禁用状态，我是禁用状态，我是禁用状态。\\\" />\\n    </List.Item>\\n  </List>,\\n  mountNode,\\n);\\n```\\n\\n## 高度自适应\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Input, List } from 'zarm';\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState('');\\n\\n  return (\\n    <List>\\n      <List.Item title=\\\"多行文本\\\">\\n        <Input\\n          autoHeight\\n          rows={3}\\n          placeholder=\\\"请输入\\\"\\n          value={value}\\n          onChange={(e) => {\\n            setValue(e.target.value);\\n          }}\\n        />\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 显示输入字数\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Input, List } from 'zarm';\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState('');\\n\\n  return (\\n    <List>\\n      <List.Item title=\\\"多行文本\\\">\\n        <Input\\n          autoHeight\\n          showLength\\n          maxLength={200}\\n          rows={3}\\n          placeholder=\\\"请输入\\\"\\n          value={value}\\n          onChange={(e) => {\\n            setValue(e.target.value);\\n          }}\\n        />\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 无标签栏\\n\\n```jsx\\nimport { Input, List } from 'zarm';\\n\\nReactDOM.render(\\n  <List>\\n    <List.Item>\\n      <Input placeholder=\\\"标题\\\" />\\n    </List.Item>\\n    <List.Item>\\n      <Input autoHeight rows={4} maxLength={200} placeholder=\\\"摘要\\\" />\\n    </List.Item>\\n  </List>,\\n  mountNode,\\n);\\n```\\n\\n## 上下结构\\n\\n```jsx\\nimport { Input, List } from 'zarm';\\n\\nReactDOM.render(\\n  <List>\\n    <List.Item description=\\\"最少4个字符，包含大小写英文字母和数字\\\">\\n      <Input label=\\\"账号\\\" placeholder=\\\"请输入您的账号\\\" />\\n    </List.Item>\\n    <List.Item description=\\\"最少8个字符，包含大小写英文字母、数字和字符\\\">\\n      <Input label=\\\"密码\\\" type=\\\"password\\\" placeholder=\\\"请输入您的密码\\\" />\\n    </List.Item>\\n    <List.Item>\\n      <Input\\n        label=\\\"个人介绍\\\"\\n        autoHeight\\n        rows={4}\\n        maxLength={200}\\n        placeholder=\\\"请输入您的个人介绍\\\"\\n      />\\n    </List.Item>\\n  </List>,\\n  mountNode,\\n);\\n```\\n\\n## API\\n\\n| 属性         | 类型                                                                          | 默认值 | 说明                                                                     |\\n| :----------- | :---------------------------------------------------------------------------- | :----- | :----------------------------------------------------------------------- |\\n| label        | ReactNode                                                                     | -      | 标签栏内容                                                               |\\n| type         | string                                                                        | 'text' | 类型，同原生 `input` 组件                                                |\\n| value        | number \\\\| string                                                              | -      | 值                                                                       |\\n| defaultValue | number \\\\| string                                                              | -      | 初始值                                                                   |\\n| disabled     | boolean                                                                       | false  | 是否禁用                                                                 |\\n| readOnly     | boolean                                                                       | false  | 是否只读                                                                 |\\n| rows         | number                                                                        | -      | 多行文本时的显示行数。type=\\\"text\\\" 时有效。                               |\\n| autoHeight   | boolean                                                                       | false  | 是否高度自适应。多行文本（type=\\\"text\\\" 且包含 rows 属性）时有效。         |\\n| autoFocus    | boolean                                                                       | false  | 是否自动获取焦点                                                         |\\n| maxLength    | number                                                                        | -      | 输入字数上限                                                             |\\n| showLength   | boolean                                                                       | false  | 是否显示输入字数。多行文本（type=\\\"text\\\" 且包含 rows 属性）时有效。       |\\n| clearable    | boolean                                                                       | false  | 是否显示清除按钮。必须为受控组件（属性包含 value、onChange）时方可生效。 |\\n| onChange     | (event: React.ChangeEvent\\\\<HTMLInputElement \\\\| HTMLTextAreaElement\\\\>) => void | -      | 值变化时触发的回调函数                                                   |\\n\\n## CSS 变量\\n\\n| 属性                        | 默认值                             | 说明                       |\\n| :-------------------------- | :--------------------------------- | :------------------------- |\\n| --color                     | 'var(--za-color-text)'             | 字体颜色                   |\\n| --font-size                 | 'var(--za-font-size-md)'           | 字体大小                   |\\n| --height                    | '28px'                             | 输入框高度                 |\\n| --line-height               | '28px'                             | 输入框行高                 |\\n| --label-font-size           | 'var(--za-font-size-sm)'           | 标签字体大小               |\\n| --placeholder-color         | 'var(--za-color-text-placeholder)' | 占位符字体颜色             |\\n| --disabled-color            | 'var(--za-color-text-disabled)'    | 禁用状态下字体颜色         |\\n| --clear-icon-size           | '16px'                             | 清除按钮大小               |\\n| --clear-icon-color          | '#ccc'                             | 清除按钮颜色               |\\n| --textarea-length-font-size | 'var(--za-font-size-sm)'           | 多行文本内容长度的字体大小 |\\n| --textarea-length-color     | 'var(--za-color-text-disabled)'    | 多行文本内容长度的字体颜色 |\\n\";"],"names":[],"sourceRoot":""}