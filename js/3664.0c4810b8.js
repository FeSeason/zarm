"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3664],{33664:function(n,e,t){t.r(e),e.default="# Switch 开关\n\n## 基本用法\n\n```jsx\nimport { useState } from 'react';\nimport { Switch, List } from 'zarm';\n\nconst Demo = () => {\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <List>\n      <List.Item title=\"普通\" suffix={<Switch checked={checked} onChange={setChecked} />} />\n      <List.Item title=\"默认开\" suffix={<Switch defaultChecked />} />\n      <List.Item title=\"禁用的开关（默认关）\" suffix={<Switch disabled />} />\n      <List.Item title=\"禁用的开关（默认开）\" suffix={<Switch defaultChecked disabled />} />\n    </List>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| 属性           | 类型                       | 默认值 | 说明                   |\n| :------------- | :------------------------- | :----- | :--------------------- |\n| checked        | boolean                    | -      | 值                     |\n| defaultChecked | boolean                    | -      | 初始值                 |\n| disabled       | boolean                    | false  | 是否禁用               |\n| onChange       | (checked: boolean) => void | -      | 值变化时触发的回调函数 |\n\n## CSS 变量\n\n| 属性                 | 默认值                                                                                            | 说明           |\n| :------------------- | :------------------------------------------------------------------------------------------------ | :------------- |\n| --width              | '52px'                                                                                            | 宽度           |\n| --height             | '32px'                                                                                            | 高度           |\n| --background         | 'rgba(120, 120, 128, 0.16)'                                                                       | 背景色         |\n| --border-radius      | 'var(--za-radius-round)'                                                                          | 圆角大小       |\n| --transition         | 'all 0.3s'                                                                                        | 过渡效果       |\n| --checked-background | 'var(--za-theme-primary)'                                                                         | 开启时的背景色 |\n| --knob-background    | '#fff'                                                                                            | 把手背景色     |\n| --knob-size          | '28px'                                                                                            | 把手大小       |\n| --knob-box-shadow    | '0 3px 1px rgba(0, 0, 0, 0.06), 0 3px 8px rgba(0, 0, 0, 0.15)'                                    | 把手阴影效果   |\n| --knob-border-color  | 'rgba(0, 0, 0, 0.04)'                                                                             | 把手边框色     |\n| --knob-border-width  | '0.5px'                                                                                           | 把手边框宽度   |\n| --knob-transition    | 'transform 0.3s cubic-bezier(0.45, 1, 0.4, 1), transform 0.3s cubic-bezier(0.4, 0.4, 0.25, 1.35)' | 把手过渡效果   |\n"}}]);