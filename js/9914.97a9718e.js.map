{"version":3,"file":"js/9914.97a9718e.js","mappings":"0GAAA","sources":["webpack://site/../zarm/src/tab-bar/demo.md"],"sourcesContent":["export default \"# TabBar 标签栏\\n\\n## 基本用法\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Icon, TabBar, List, Button } from 'zarm';\\n\\nconst TabIcon = Icon.createFromIconfont(\\n  '//lf1-cdn-tos.bytegoofy.com/obj/iconpark/svg_20337_14.627ee457cf7594fbbce6d5e14b8c29ef.js',\\n);\\n\\nconst Demo = () => {\\n  const [activeKey, setActiveKey] = useState('home');\\n\\n  return (\\n    <>\\n      <TabBar activeKey={activeKey} onChange={setActiveKey}>\\n        <TabBar.Item itemKey=\\\"home\\\" title=\\\"首页\\\" icon={<TabIcon type=\\\"home\\\" />} />\\n        <TabBar.Item\\n          itemKey=\\\"found\\\"\\n          title=\\\"项目\\\"\\n          icon={<TabIcon type=\\\"menu\\\" />}\\n          // badge={{ shape: 'circle', text: '3' }}\\n        />\\n        <TabBar.Item\\n          itemKey=\\\"me\\\"\\n          title=\\\"我的\\\"\\n          icon={<TabIcon type=\\\"user\\\" />}\\n          // badge={{ shape: 'dot' }}\\n        />\\n      </TabBar>\\n    </>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 徽标\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Icon, TabBar, List, Button } from 'zarm';\\n\\nconst TabIcon = Icon.createFromIconfont(\\n  '//lf1-cdn-tos.bytegoofy.com/obj/iconpark/svg_20337_14.627ee457cf7594fbbce6d5e14b8c29ef.js',\\n);\\n\\nconst Demo = () => {\\n  return (\\n    <>\\n      <TabBar>\\n        <TabBar.Item itemKey=\\\"home\\\" title=\\\"首页\\\" icon={<TabIcon type=\\\"home\\\" />} />\\n        <TabBar.Item\\n          itemKey=\\\"found\\\"\\n          title=\\\"项目\\\"\\n          icon={<TabIcon type=\\\"menu\\\" />}\\n          badge={{ shape: 'circle', text: 3 }}\\n        />\\n        <TabBar.Item\\n          itemKey=\\\"me\\\"\\n          title=\\\"我的\\\"\\n          icon={<TabIcon type=\\\"user\\\" />}\\n          badge={{ shape: 'dot' }}\\n        />\\n      </TabBar>\\n    </>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 仅图标\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Icon, TabBar, List, Button } from 'zarm';\\n\\nconst TabIcon = Icon.createFromIconfont(\\n  '//lf1-cdn-tos.bytegoofy.com/obj/iconpark/svg_20337_14.627ee457cf7594fbbce6d5e14b8c29ef.js',\\n);\\n\\nconst Demo = () => {\\n  return (\\n    <>\\n      <TabBar>\\n        <TabBar.Item itemKey=\\\"home\\\" icon={<TabIcon type=\\\"home\\\" />} />\\n        <TabBar.Item itemKey=\\\"found\\\" icon={<TabIcon type=\\\"menu\\\" />} />\\n        <TabBar.Item itemKey=\\\"me\\\" icon={<TabIcon type=\\\"user\\\" />} />\\n      </TabBar>\\n    </>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 仅标题\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Icon, TabBar, List, Button } from 'zarm';\\n\\nconst Demo = () => {\\n  return (\\n    <>\\n      <TabBar>\\n        <TabBar.Item itemKey=\\\"home\\\" title=\\\"首页\\\" />\\n        <TabBar.Item itemKey=\\\"found\\\" title=\\\"项目\\\" />\\n        <TabBar.Item itemKey=\\\"me\\\" title=\\\"我的\\\" />\\n      </TabBar>\\n    </>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 受控模式\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Icon, TabBar, List, Button } from 'zarm';\\n\\nconst TabIcon = Icon.createFromIconfont(\\n  '//lf1-cdn-tos.bytegoofy.com/obj/iconpark/svg_20337_14.627ee457cf7594fbbce6d5e14b8c29ef.js',\\n);\\n\\nconst Demo = () => {\\n  const [activeKey, setActiveKey] = React.useState('me');\\n\\n  return (\\n    <>\\n      <TabBar activeKey={activeKey} onChange={setActiveKey} safeArea>\\n        <TabBar.Item itemKey=\\\"home\\\" title=\\\"首页\\\" icon={<TabIcon type=\\\"home\\\" />} />\\n        <TabBar.Item itemKey=\\\"found\\\" title=\\\"项目\\\" icon={<TabIcon type=\\\"menu\\\" />} />\\n        <TabBar.Item itemKey=\\\"me\\\" title=\\\"我的\\\" icon={<TabIcon type=\\\"user\\\" />} />\\n      </TabBar>\\n    </>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 开启安全区域\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Icon, TabBar, List, Button } from 'zarm';\\n\\nconst TabIcon = Icon.createFromIconfont(\\n  '//lf1-cdn-tos.bytegoofy.com/obj/iconpark/svg_20337_14.627ee457cf7594fbbce6d5e14b8c29ef.js',\\n);\\n\\nconst Demo = () => {\\n  return (\\n    <>\\n      <TabBar safeArea>\\n        <TabBar.Item itemKey=\\\"home\\\" title=\\\"首页\\\" icon={<TabIcon type=\\\"home\\\" />} />\\n        <TabBar.Item itemKey=\\\"found\\\" title=\\\"项目\\\" icon={<TabIcon type=\\\"menu\\\" />} />\\n        <TabBar.Item itemKey=\\\"me\\\" title=\\\"我的\\\" icon={<TabIcon type=\\\"user\\\" />} />\\n      </TabBar>\\n    </>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## API\\n\\n### TabBar\\n\\n| 属性             | 类型                              | 默认值 | 说明                       |\\n| :--------------- | :-------------------------------- | :----- | :------------------------- |\\n| activeKey        | number \\\\| string                  | -      | 当前选中项                 |\\n| defaultActiveKey | number \\\\| string                  | -      | 初始选中项, 默认第一个选中 |\\n| onChange         | (value: number \\\\| string) => void | -      | 值变化时触发的回调函数     |\\n\\n### TabBar.Item\\n\\n| 属性       | 类型             | 默认值 | 说明                                                 |\\n| :--------- | :--------------- | :----- | :--------------------------------------------------- |\\n| itemKey    | number \\\\| string | -      | 唯一标识，对应`activeKey`，不设置则默认取 index 索引 |\\n| title      | ReactNode        | -      | 标题文字                                             |\\n| icon       | ReactNode        | -      | 图标                                                 |\\n| activeIcon | ReactNode        | -      | 选中时图标，不设置等同 icon 属性的值                 |\\n| badge      | BadgeProps       | -      | 参考 [Badge](/#/components/badge) 组件               |\\n\\n## CSS 变量\\n\\n| 属性           | 默认值                  | 说明               |\\n| :------------- | :---------------------- | :----------------- |\\n| --background   | '#fff'                  | 背景色             |\\n| --height       | '50px'                  | 高度               |\\n| --color        | var(--za-color-text)    | 字体颜色           |\\n| --active-color | var(--za-theme-primary) | 选中状态下字体颜色 |\\n| --font-size    | '12px'                  | 字体大小           |\\n\";"],"names":[],"sourceRoot":""}