(self.webpackChunksite=self.webpackChunksite||[]).push([[9019],{69019:function(e,n,t){"use strict";t.r(n),n.default='# Calendar 日历\n\n## 平铺选择\n\n```jsx\nimport { useState } from \'react\';\nimport { Radio, DateSelect, Cell, Calendar } from \'zarm\';\n\nconst Demo = () => {\n  const [multiple, setMultiple] = useState(true);\n  const [value, setValue] = useState([\'2020-07-29\', \'2020-08-04\']);\n  const [min, setMin] = useState(\'2017-12-29\');\n  const [max, setMax] = useState(\'2020-08-04\');\n  const [custom, setCustom] = useState(false);\n\n  return (\n    <>\n      <Cell title="是否多选">\n        <Radio.Group\n          compact\n          type="button"\n          value={multiple}\n          onChange={(value) => {\n            setMultiple(value);\n          }}\n        >\n          <Radio value={false}>单选</Radio>\n          <Radio value={true}>双选</Radio>\n        </Radio.Group>\n      </Cell>\n      <Cell title="最小日期">\n        <DateSelect placeholder="Please input start date" mode="date" value={min} onOk={setMin} />\n      </Cell>\n      <Cell title="最大日期">\n        <DateSelect placeholder="Please input end date" mode="date" value={max} onOk={setMax} />\n      </Cell>\n      <Cell title="自定义渲染">\n        <Radio.Group\n          compact\n          type="button"\n          value={custom}\n          onChange={(value) => {\n            setCustom(value);\n          }}\n        >\n          <Radio value={false}>否</Radio>\n          <Radio value={true}>是</Radio>\n        </Radio.Group>\n      </Cell>\n      <Calendar\n        multiple={multiple}\n        value={value}\n        min={min}\n        max={max}\n        dateRender={(date) => {\n          if (custom && /(0|6)/.test(date.getDay())) {\n            return (\n              <div className="custom">\n                <div className="custom__date">{date.getDate()}</div>\n                <div className="custom__text">Closed</div>\n              </div>\n            );\n          }\n          return date.getDate();\n        }}\n        disabledDate={(date) => {\n          if (custom) return /(0|6)/.test(date.getDay());\n          return false;\n        }}\n        onChange={(value) => {\n          setValue(value);\n          console.log(\'onChange\', value);\n        }}\n      />\n    </>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| 属性         | 类型                     | 默认值                   | 说明                             |\n| :----------- | :----------------------- | :----------------------- | :------------------------------- |\n| value        | Date \\| Date[]           | -                        | 值                               |\n| defaultValue | Date \\| Date[]           | -                        | 初始值                           |\n| min          | Date                     | new Date()               | 最小可选日期                     |\n| max          | Date                     | min + 1 年               | 最大可选日期                     |\n| multiple     | boolean                  | false                    | 是否双选                         |\n| dateRender   | (date?: Date) => void    | (date) => date.getDate() | 日期渲染函数                     |\n| disabledDate | (date?: Date) => boolean | () => false              | 日期是否禁止选择                 |\n| onChange     | (value?: Date[]) => void | -                        | 日期选择发生变化时触发的回调函数 |\n'}}]);