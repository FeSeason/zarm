{"version":3,"file":"js/5103.f6b80884.js","mappings":"0GAAA","sources":["webpack://site/../zarm/src/rate/demo.md"],"sourcesContent":["export default \"# Rate 评分\\n\\n## 基本用法\\n\\n```jsx\\nimport { List, Rate } from 'zarm';\\n\\nReactDOM.render(\\n  <List>\\n    <List.Item>\\n      <Rate defaultValue={2} />\\n    </List.Item>\\n  </List>,\\n  mountNode,\\n);\\n```\\n\\n## 半星\\n\\n```jsx\\nimport { List, Rate } from 'zarm';\\n\\nconst Demo = () => {\\n  return (\\n    <List>\\n      <List.Item>\\n        <Rate defaultValue={2.5} allowHalf />\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 自定义图标\\n\\n```jsx\\nimport { List, Rate } from 'zarm';\\nimport { SuccessCircle } from '@zarm-design/icons';\\n\\nconst Demo = () => {\\n  return (\\n    <List>\\n      <List.Item>\\n        <Rate defaultValue={3} character={<SuccessCircle />} allowHalf />\\n      </List.Item>\\n      <List.Item>\\n        <Rate defaultValue={3} character=\\\"众\\\" allowHalf />\\n      </List.Item>\\n      <List.Item>\\n        <Rate defaultValue={3} character=\\\"A\\\" allowHalf />\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 自定义颜色\\n\\n```jsx\\nimport { List, Rate } from 'zarm';\\n\\nconst Demo = () => {\\n  return (\\n    <List>\\n      <List.Item>\\n        <Rate defaultValue={3} style={{ '--active-color': '#fa541b' }} allowHalf />\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 自定义间距\\n\\n```jsx\\nimport { List, Rate } from 'zarm';\\n\\nconst Demo = () => {\\n  return (\\n    <List>\\n      <List.Item>\\n        <Rate defaultValue={3} style={{ '--gap': '16px' }} allowHalf />\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 自定义数量\\n\\n```jsx\\nimport { List, Rate } from 'zarm';\\n\\nconst Demo = () => {\\n  return (\\n    <List>\\n      <List.Item>\\n        <Rate defaultValue={3} count={10} allowHalf />\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 可清除\\n\\n```jsx\\nimport { List, Rate } from 'zarm';\\n\\nconst Demo = () => {\\n  return (\\n    <List>\\n      <List.Item>\\n        <Rate defaultValue={3} allowHalf allowClear />\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 只读状态\\n\\n```jsx\\nimport { List, Rate } from 'zarm';\\n\\nconst Demo = () => {\\n  return (\\n    <List>\\n      <List.Item>\\n        <Rate value={2.5} allowHalf readonly />\\n      </List.Item>\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 受控组件\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { List, Rate, Toast } from 'zarm';\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState(3);\\n\\n  return (\\n    <List>\\n      <List.Item\\n        title={\\n          <Rate\\n            allowHalf\\n            value={value}\\n            onChange={(value) => {\\n              setValue(value);\\n              Toast.show(value);\\n            }}\\n          />\\n        }\\n        suffix={value}\\n      />\\n    </List>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## API\\n\\n| 属性         | 类型                    | 默认值           | 说明                     |\\n| :----------- | :---------------------- | :--------------- | :----------------------- |\\n| value        | number                  | -                | 分值                     |\\n| defaultValue | number                  | 0                | 初始分值                 |\\n| count        | number                  | 5                | 总分值                   |\\n| character    | React.ReactNode         | \\\\<StartFill \\\\/\\\\> | 自定义字符               |\\n| allowHalf    | boolean                 | false            | 是否允许半选             |\\n| allowClear   | boolean                 | false            | 是否允许再次点击后清除   |\\n| readonly     | boolean                 | false            | 是否只读状态             |\\n| onChange     | (value: number) => void | -                | 分值变化时触发的回调函数 |\\n\\n## CSS 变量\\n\\n| 属性           | 默认值    | 说明             |\\n| :------------- | :-------- | :--------------- |\\n| --size         | '20px'    | 选项大小         |\\n| --color        | '#eee'    | 选项颜色         |\\n| --active-color | '#fadb14' | 选项激活后的颜色 |\\n| --gap          | '4px'     | 选项之间的间距   |\\n\";"],"names":[],"sourceRoot":""}