"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[4594],{54594:function(n,e,o){o.r(e),e.default="# SearchBar 搜索框\n\n## 基本用法\n\n```jsx\nimport { useState, useRef } from 'react';\nimport { SearchBar } from 'zarm';\n\nconst Demo = () => {\n  const [value, setValue] = useState('');\n\n  return (\n    <SearchBar\n      value={value}\n      onChange={(e) => {\n        setValue(e.target.value);\n        console.log(`onChange: ${e.target.value}`);\n      }}\n      onFocus={() => {\n        console.log('onFocus');\n      }}\n      onBlur={() => {\n        console.log('onBlur');\n      }}\n      onSubmit={(value) => {\n        console.log(`onSubmit: ${value}`);\n      }}\n      onCancel={() => {\n        console.log(`onCancel`);\n      }}\n    />\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## 始终展示取消按钮\n\n```jsx\nimport { useState } from 'react';\nimport { SearchBar } from 'zarm';\n\nconst Demo = () => {\n  const [value, setValue] = useState('');\n\n  return (\n    <SearchBar\n      showCancel={() => true}\n      value={value}\n      onChange={(e) => {\n        setValue(e.target.value);\n        console.log(`onChange: ${e.target.value}`);\n      }}\n      onSubmit={(value) => {\n        console.log(`onSubmit: ${value}`);\n      }}\n    />\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## 获取焦点后展示取消按钮\n\n```jsx\nimport { useState } from 'react';\nimport { SearchBar } from 'zarm';\n\nconst Demo = () => {\n  const [value, setValue] = useState('');\n\n  return (\n    <SearchBar\n      showCancel\n      value={value}\n      onChange={(e) => {\n        setValue(e.target.value);\n        console.log(`onChange: ${e.target.value}`);\n      }}\n      onSubmit={(value) => {\n        console.log(`onSubmit: ${value}`);\n      }}\n    />\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## 多形状\n\n```jsx\nimport { SearchBar } from 'zarm';\n\nReactDOM.render(\n  <>\n    <SearchBar shape=\"rect\" />\n    <SearchBar shape=\"round\" />\n  </>,\n  mountNode,\n);\n```\n\n## 手动获取焦点\n\n```jsx\nimport { useRef } from 'react';\nimport { SearchBar, Button } from 'zarm';\n\nconst Demo = () => {\n  const searchRef = useRef();\n\n  return (\n    <>\n      <SearchBar ref={searchRef} />\n      <div className=\"button-wrap\">\n        <Button\n          theme=\"primary\"\n          size=\"xs\"\n          shape=\"radius\"\n          onClick={() => {\n            searchRef.current.focus();\n          }}\n        >\n          点击获取焦点\n        </Button>\n      </div>\n    </>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## 自定义图标\n\n```jsx\nimport { SearchBar, Button } from 'zarm';\nimport { WarningCircle } from '@zarm-design/icons';\n\nconst Demo = () => {\n  const [icon, setIcon] = React.useState(<WarningCircle size=\"sm\" />);\n\n  return (\n    <>\n      <SearchBar icon={icon} />\n      <div className=\"button-wrap\">\n        <Button size=\"xs\" shape=\"radius\" onClick={() => setIcon(null)}>\n          不显示 Icon\n        </Button>\n        <Button size=\"xs\" shape=\"radius\" onClick={() => setIcon(undefined)}>\n          默认 Icon\n        </Button>\n        <Button size=\"xs\" shape=\"radius\" onClick={() => setIcon(<WarningCircle size=\"sm\" />)}>\n          自定义 Icon\n        </Button>\n      </div>\n    </>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| 属性         | 类型                                                    | 默认值                 | 说明                                   |\n| :----------- | :------------------------------------------------------ | :--------------------- | :------------------------------------- |\n| placeholder  | string                                                  | '搜索'                 | 输入框占位符                           |\n| value        | string                                                  | -                      | 值                                     |\n| defaultValue | string                                                  | -                      | 初始值                                 |\n| shape        | string                                                  | 'radius'               | 形状，可选值 `rect`, `radius`, `round` |\n| disabled     | boolean                                                 | false                  | 是否禁用                               |\n| showCancel   | boolean \\| ((focus: boolean, value: string) => boolean) | false                  | 是否在搜索框右侧展示取消按钮           |\n| cancelText   | React.ReactNode                                         | '取消'                 | 取消按钮显示的内容                     |\n| maxLength    | number                                                  | -                      | 输入字数上限                           |\n| clearable    | boolean                                                 | true                   | 是否提供清空输入框功能                 |\n| icon         | React.ReactNode                                         | \\<Search size=\"sm\" /\\> | 图标                                   |\n| onChange     | (event: React.ChangeEvent\\<HTMLInputElement\\>) => void  | -                      | 值变化时触发的回调函数                 |\n| onCancel     | () => void                                              | -                      | 点击取消按钮触发的回调函数             |\n| onSubmit     | (value: string) => void                                 | -                      | 输入框回车时触发的回调函数             |\n| onFocus      | (event: React.FocusEvent\\<HTMLInputElement\\>) => void   | -                      | 获取焦点时触发的回调函数               |\n| onBlur       | (event: React.FocusEvent\\<HTMLInputElement\\>) => void   | -                      | 失去焦点时触发的回调函数               |\n\n## CSS 变量\n\n| 属性                       | 默认值                      | 说明               |\n| :------------------------- | :-------------------------- | :----------------- |\n| --background               | 'transparent'               | 背景色             |\n| --height                   | '52px'                      | 高度               |\n| --padding-horizontal       | '16px'                      | 左右留白内边距     |\n| --input-padding-horizontal | '8px'                       | 输入框内边距       |\n| --input-height             | '36px'                      | 输入框高度         |\n| --input-background         | 'rgba(118, 118, 128, 0.12)' | 输入框背景色       |\n| --input-font-size          | 'var(--za-font-size-md)'    | 输入框字体大小     |\n| --input-placeholder-color  | '#808084'                   | 输入框占位符颜色   |\n| --input-clear-icon-color   | '#8e8e92'                   | 输入框清除图标颜色 |\n| --input-border-radius      | '10px'                      | 输入框圆角大小     |\n| --cancel-font-size         | 'var(--za-font-size-md)'    | 取消按钮字体大小   |\n| --cancel-color             | 'var(--za-theme-primary)'   | 取消按钮字体颜色   |\n| --cancel-margin-left       | '13px'                      | 取消按钮左边距     |\n| --cancel-transition        | 'all 0.2s'                  | 取消按钮动画       |\n| --icon-margin-right        | '6px'                       | 输入框图标右边距   |\n| --icon-color               | '#808084'                   | 输入框图标颜色     |\n"}}]);