(self.webpackChunksite=self.webpackChunksite||[]).push([[1619],{41619:function(n,o,t){"use strict";t.r(o),o.default="# Toast 轻提示\n\n## 基本用法\n\n```jsx\nimport { Toast, Cell, Button } from 'zarm';\nimport { Success } from '@zarm-design/icons';\n\nconst Demo = () => (\n  <>\n    <Cell\n      description={\n        <Button\n          size=\"xs\"\n          onClick={() => {\n            Toast.show('默认3秒自动关闭');\n          }}\n        >\n          开启\n        </Button>\n      }\n    >\n      普通\n    </Cell>\n\n    <Cell\n      description={\n        <Button\n          size=\"xs\"\n          onClick={() => {\n            Toast.show({\n              content: '指定5秒后自动关闭',\n              stayTime: 5000,\n              afterClose: () => {\n                console.log('Toast已关闭');\n              },\n            });\n          }}\n        >\n          开启\n        </Button>\n      }\n    >\n      指定停留时间\n    </Cell>\n\n    <Cell\n      description={\n        <Button\n          size=\"xs\"\n          onClick={() => {\n            Toast.show({\n              className: 'test',\n              content: '不可同时进行其他交互',\n              mountContainer: document.getElementById('test-div'),\n              mask: true,\n              afterClose: () => {\n                console.log('Toast已关闭');\n              },\n            });\n          }}\n        >\n          开启\n        </Button>\n      }\n    >\n      有遮罩层\n    </Cell>\n\n    <Cell\n      description={\n        <Button\n          size=\"xs\"\n          onClick={() => {\n            Toast.show(\n              <div className=\"box\">\n                <Success className=\"box-icon\" />\n                <div className=\"box-text\">预约成功</div>\n              </div>,\n            );\n          }}\n        >\n          开启\n        </Button>\n      }\n    >\n      自定义内容\n    </Cell>\n  </>\n);\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| 属性           | 类型                                 | 默认值        | 说明                               |\n| :------------- | :----------------------------------- | :------------ | :--------------------------------- |\n| visible        | boolean                              | false         | 是否展示                           |\n| content        | ReactNode                            | -             | 显示的内容                         |\n| stayTime       | number                               | 3000          | 自动关闭前停留的时间（单位：毫秒） |\n| mask           | boolean                              | false         | 是否展示遮罩层                     |\n| onMaskClick    | () => void                           | -             | 点击遮罩层时触发的回调函数         |\n| afterClose     | () => void                           | -             | Toast 隐藏后的回调函数             |\n| mountContainer | HTMLElement &#124; () => HTMLElement | document.body | 指定 Toast 挂载的 HTML 节点        |\n\n## 静态方法\n\n```js\n// 显示轻提示 Toast.show(content: ReactNode | ToastProps)\nToast.show('默认3秒自动关闭');\nToast.show({\n  content: '指定5秒后自动关闭',\n  stayTime: 5000,\n  afterClose: () => {\n    console.log('Toast已关闭');\n  },\n});\n\n// 隐藏轻提示\nToast.hide();\n```\n"}}]);