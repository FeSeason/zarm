{"version":3,"sources":["webpack://site/../zarm/src/radio/demo.md"],"names":[],"mappings":"0GAAA","file":"js/1120.b06c9da3.js","sourcesContent":["export default \"# Radio 单选框\\n\\n## 基本用法\\n\\n```jsx\\nimport { Radio, Cell } from 'zarm';\\n\\nReactDOM.render(\\n  <>\\n    <Cell>\\n      <Radio>普通</Radio>\\n    </Cell>\\n    <Cell>\\n      <Radio defaultChecked>默认选中</Radio>\\n    </Cell>\\n    <Cell>\\n      <Radio disabled>禁用</Radio>\\n    </Cell>\\n    <Cell>\\n      <Radio defaultChecked disabled>\\n        选中且禁用\\n      </Radio>\\n    </Cell>\\n  </>,\\n  mountNode,\\n);\\n```\\n\\n## 组合使用\\n\\n```jsx\\nimport { Cell, Radio } from 'zarm';\\n\\nReactDOM.render(\\n  <Cell>\\n    <Radio.Group>\\n      <Radio value=\\\"0\\\">选项一</Radio>\\n      <Radio value=\\\"1\\\">选项二</Radio>\\n      <Radio value=\\\"2\\\">选项三</Radio>\\n    </Radio.Group>\\n  </Cell>,\\n  mountNode,\\n);\\n```\\n\\n## 按钮样式\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Radio, Cell } from 'zarm';\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState('0');\\n\\n  return (\\n    <>\\n      <Cell\\n        description={\\n          <Radio.Group\\n            type=\\\"button\\\"\\n            value={value}\\n            onChange={(value) => {\\n              setValue(value);\\n              console.log(`radio to ${value}`);\\n            }}\\n          >\\n            <Radio value=\\\"0\\\">选项一</Radio>\\n            <Radio value=\\\"1\\\">选项二</Radio>\\n            <Radio value=\\\"2\\\">选项三</Radio>\\n          </Radio.Group>\\n        }\\n      >\\n        普通\\n      </Cell>\\n\\n      <Cell\\n        description={\\n          <Radio.Group type=\\\"button\\\" defaultValue=\\\"1\\\">\\n            <Radio value=\\\"0\\\">选项一</Radio>\\n            <Radio value=\\\"1\\\">选项二</Radio>\\n            <Radio value=\\\"2\\\">选项三</Radio>\\n          </Radio.Group>\\n        }\\n      >\\n        指定默认值\\n      </Cell>\\n\\n      <Cell\\n        description={\\n          <Radio.Group type=\\\"button\\\">\\n            <Radio value=\\\"0\\\">选项一</Radio>\\n            <Radio value=\\\"1\\\" disabled>\\n              选项二\\n            </Radio>\\n            <Radio value=\\\"2\\\" disabled checked>\\n              选项三\\n            </Radio>\\n          </Radio.Group>\\n        }\\n      >\\n        禁用指定项\\n      </Cell>\\n\\n      <Cell\\n        description={\\n          <Radio.Group type=\\\"button\\\" shape=\\\"rect\\\">\\n            <Radio value=\\\"0\\\">选项一</Radio>\\n            <Radio value=\\\"1\\\">选项二</Radio>\\n            <Radio value=\\\"2\\\">选项三</Radio>\\n          </Radio.Group>\\n        }\\n      >\\n        直角\\n      </Cell>\\n\\n      <Cell\\n        description={\\n          <Radio.Group type=\\\"button\\\" shape=\\\"round\\\">\\n            <Radio value=\\\"0\\\">选项一</Radio>\\n            <Radio value=\\\"1\\\">选项二</Radio>\\n            <Radio value=\\\"2\\\">选项三</Radio>\\n          </Radio.Group>\\n        }\\n      >\\n        椭圆角\\n      </Cell>\\n\\n      <Cell\\n        description={\\n          <Radio.Group compact type=\\\"button\\\" defaultValue=\\\"0\\\">\\n            <Radio value=\\\"0\\\">选项一</Radio>\\n            <Radio value=\\\"1\\\">选项二</Radio>\\n            <Radio value=\\\"2\\\">选项三</Radio>\\n          </Radio.Group>\\n        }\\n      >\\n        紧凑模式\\n      </Cell>\\n\\n      <Cell\\n        description={\\n          <Radio.Group compact ghost type=\\\"button\\\" defaultValue=\\\"0\\\">\\n            <Radio value=\\\"0\\\">选项一</Radio>\\n            <Radio value=\\\"1\\\">选项二</Radio>\\n            <Radio value=\\\"2\\\">选项三</Radio>\\n          </Radio.Group>\\n        }\\n      >\\n        幽灵按钮\\n      </Cell>\\n    </>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 块级样式\\n\\n```jsx\\nimport { Cell, Radio } from 'zarm';\\n\\nReactDOM.render(\\n  <Cell>\\n    <Radio.Group block type=\\\"button\\\">\\n      <Radio value=\\\"0\\\">选项一</Radio>\\n      <Radio value=\\\"1\\\">选项二</Radio>\\n      <Radio value=\\\"2\\\">选项三</Radio>\\n    </Radio.Group>\\n  </Cell>,\\n  mountNode,\\n);\\n```\\n\\n## 列表样式\\n\\n```jsx\\nimport { Radio } from 'zarm';\\n\\nReactDOM.render(\\n  <Radio.Group type=\\\"cell\\\">\\n    <Radio value=\\\"0\\\">选项一</Radio>\\n    <Radio value=\\\"1\\\">选项二</Radio>\\n    <Radio value=\\\"2\\\" disabled>\\n      选项三（禁止选择）\\n    </Radio>\\n  </Radio.Group>,\\n  mountNode,\\n);\\n```\\n\\n## 列表样式禁用状态\\n\\n```jsx\\nimport { Radio } from 'zarm';\\n\\nReactDOM.render(\\n  <Radio.Group disabled type=\\\"cell\\\">\\n    <Radio value=\\\"0\\\">选项一</Radio>\\n    <Radio value=\\\"1\\\">选项二</Radio>\\n    <Radio value=\\\"2\\\" checked>\\n      选项三\\n    </Radio>\\n  </Radio.Group>,\\n  mountNode,\\n);\\n```\\n\\n## API\\n\\n### Radio\\n\\n| 属性           | 类型                                       | 默认值 | 说明                   |\\n| :------------- | :----------------------------------------- | :----- | :--------------------- |\\n| value          | string \\\\| number                           | -      | 值                     |\\n| checked        | boolean                                    | -      | 当前是否选中           |\\n| defaultChecked | boolean                                    | -      | 初始是否选中           |\\n| disabled       | boolean                                    | false  | 是否禁用               |\\n| onChange       | (e: ChangeEvent<HTMLInputElement>) => void | -      | 值变化时触发的回调函数 |\\n\\n### Radio.Group\\n\\n| 属性         | 类型                               | 默认值   | 说明                                               |\\n| :----------- | :--------------------------------- | :------- | :------------------------------------------------- |\\n| type         | string                             | -        | 显示类型，可选值 `button`, `cell`                  |\\n| value        | string \\\\| number                   | -        | 选中值                                             |\\n| defaultValue | string \\\\| number                   | -        | 初始选中值                                         |\\n| disabled     | boolean                            | false    | 是否禁用                                           |\\n| block        | boolean                            | false    | 子项是否为块级元素                                 |\\n| onChange     | (value?: string \\\\| number) => void | -        | 值变化时触发的回调函数                             |\\n| size         | string                             | 'xs'     | 按钮类型时的大小，可选值为 `lg`、`md`、`sm`、`xs`  |\\n| shape        | string                             | 'radius' | 按钮类型时的形状，可选值 `rect`, `radius`, `round` |\\n| ghost        | boolean                            | false    | 按钮类型时，选中项样式是否为幽灵按钮               |\\n| compact      | boolean                            | false    | 按钮类型时，是否为紧凑模式                         |\\n\";"],"sourceRoot":""}