(self.webpackChunksite=self.webpackChunksite||[]).push([[3159],{23159:function(n,e,o){"use strict";o.r(e),e.default="# Keyboard 虚拟键盘\n\n## Keyboard 平铺键盘\n\n```jsx\nimport { useState } from 'react';\nimport { Cell, Radio, Keyboard } from 'zarm';\n\nconst Demo = () => {\n  const [type, setType] = useState('number');\n\n  return (\n    <>\n      <Cell\n        title=\"键盘类型\"\n        description={\n          <Radio.Group compact type=\"button\" value={type} onChange={setType}>\n            <Radio value=\"number\">数字键盘</Radio>\n            <Radio value=\"price\">金额键盘</Radio>\n            <Radio value=\"idcard\">身份证键盘</Radio>\n          </Radio.Group>\n        }\n      />\n      <Keyboard type={type} onKeyClick={(key) => console.log(key)} />\n    </>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## KeyboardPicker 键盘触发器\n\n```jsx\nimport { useState } from 'react';\nimport { Cell, Button, KeyboardPicker } from 'zarm';\n\nconst Demo = () => {\n  const [visible, setVisible] = useState(false);\n\n  const toggle = () => {\n    setVisible(!visible);\n  };\n\n  const onKeyClick = (key) => {\n    console.log(key);\n    if (['close', 'ok'].indexOf(key) > -1) {\n      toggle();\n      return;\n    }\n    // do something...\n  };\n\n  return (\n    <>\n      <Cell\n        description={\n          <Button size=\"xs\" onClick={toggle}>\n            {visible ? '关闭' : '开启'}\n          </Button>\n        }\n      >\n        拾取器触发方式\n      </Cell>\n\n      <KeyboardPicker visible={visible} onKeyClick={onKeyClick} />\n    </>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| 属性       | 类型                   | 默认值   | 说明                                         |\n| :--------- | :--------------------- | :------- | :------------------------------------------- |\n| type       | string                 | 'number' | 键盘类型，可选值 `number`、`price`、`idcard` |\n| onKeyClick | (key?: string) => void | -        | 点击按键时触发的回调函数                     |\n\n### 仅 KeyboardPicker 支持的属性\n\n| 属性    | 类型    | 默认值 | 说明                   |\n| :------ | :------ | :----- | :--------------------- |\n| visible | boolean | false  | 是否展示               |\n| destroy | boolean | true   | 弹层关闭后是否移除节点 |\n"}}]);