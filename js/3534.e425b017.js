"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3534],{73534:function(n,e,o){o.r(e),e.default='# Icon 图标\n\n## 基本用法\n\n```jsx\nimport { Grid, Icon } from \'zarm\';\n\nconst MyIcon = Icon.createFromIconfont(\'//lf1-cdn-tos.bytegoofy.com/obj/iconpark/svg_20337_14.627ee457cf7594fbbce6d5e14b8c29ef.js\'); // generated by iconfont.cn\n\nReactDOM.render(\n  <Grid square>\n    <Grid.Item>\n      <div className="block">\n        <MyIcon type="home" theme="primary" />\n        <span>home</span>\n      </div>\n    </Grid.Item>\n    <Grid.Item>\n      <div className="block">\n        <MyIcon type="user" theme="primary" />\n        <span>user</span>\n      </div>\n    </Grid.Item>\n  </Grid>,\n  mountNode,\n);\n```\n\n## 图标主题\n\n```jsx\nimport { Grid, Icon } from \'zarm\';\n\nconst MyIcon = Icon.createFromIconfont(\'//lf1-cdn-tos.bytegoofy.com/obj/iconpark/svg_20337_14.627ee457cf7594fbbce6d5e14b8c29ef.js\');\n\nReactDOM.render(\n  <Grid square>\n    <Grid.Item>\n      <div className="block">\n        <MyIcon type="home" theme="warning" />\n        <span>warning</span>\n      </div>\n    </Grid.Item>\n    <Grid.Item>\n      <div className="block">\n        <MyIcon type="home" theme="danger" />\n        <span>danger</span>\n      </div>\n    </Grid.Item>\n    <Grid.Item>\n      <div className="block">\n        <MyIcon type="home" style={{ color: \'#1890ff\' }} />\n        <span>custom color</span>\n      </div>\n    </Grid.Item>\n  </Grid>,\n  mountNode,\n);\n```\n\n## 图标尺寸\n\n```jsx\nimport { Grid, Icon } from \'zarm\';\n\nconst MyIcon = Icon.createFromIconfont(\'//lf1-cdn-tos.bytegoofy.com/obj/iconpark/svg_20337_14.627ee457cf7594fbbce6d5e14b8c29ef.js\');\n\nReactDOM.render(\n  <Grid square>\n    <Grid.Item>\n      <div className="block">\n        <MyIcon type="home" theme="primary" size="sm" />\n        <span>sm</span>\n      </div>\n    </Grid.Item>\n    <Grid.Item>\n      <div className="block">\n        <MyIcon type="home" theme="primary" />\n        <span>md</span>\n      </div>\n    </Grid.Item>\n    <Grid.Item>\n      <div className="block">\n        <MyIcon type="home" theme="primary" size="lg" />\n        <span>lg</span>\n      </div>\n    </Grid.Item>\n  </Grid>,\n  mountNode,\n);\n```\n\n## @zarm-design/icons 自带图标\n\n```jsx\nimport { useState } from \'react\';\nimport { Grid, List, Radio } from \'zarm\';\nimport Icons from \'@zarm-design/icons\';\n\nfunction Demo() {\n  const [mode, setMode] = useState(\'svg\');\n  return (\n    <>\n      <List>\n        <List.Item\n          title="模式"\n          suffix={\n            <Radio.Group compact type="button" onChange={setMode} value={mode}>\n              <Radio value="svg">svg</Radio>\n              <Radio value="font">font</Radio>\n            </Radio.Group>\n          }\n        />\n      </List>\n      <Grid square>\n        {Object.keys(Icons).map((item, index) => {\n          if ([\'Icon\', \'Empty\', \'IconProvider\'].includes(item)) return;\n          return (\n            <Grid.Item key={+index}>\n              <div className="block">\n                {React.createElement(Icons[item], {\n                  key: +index,\n                  theme: \'primary\',\n                  mode,\n                })}\n                <span>{item}</span>\n              </div>\n            </Grid.Item>\n          );\n        })}\n      </Grid>\n    </>\n  );\n}\nReactDOM.render(<Demo />, mountNode);\n```\n\n## 自定义 Iconfont 图标\n\n我们提供了一个 createFromIconfont 方法，方便开发者调用在 <a href="https://www.iconfont.cn" target="_blank">iconfont.cn</a>、<a href="https://iconpark.oceanengine.com" target="_blank">iconpark</a> 等平台上自行管理的图标。\n\n其本质上是组件在渲染前会自动引入项目中的图标符号集，并且创建了一个 `<use>` 标签来渲染图标的组件。\n\n```jsx\nimport { Grid, Icon } from \'zarm\';\n\nconst MyIcon = Icon.createFromIconfont(\'//lf1-cdn-tos.bytegoofy.com/obj/iconpark/svg_20337_14.627ee457cf7594fbbce6d5e14b8c29ef.js\');\n\nReactDOM.render(\n  <Grid square>\n    <Grid.Item>\n      <div className="block">\n        <MyIcon type="home" theme="primary" />\n        <span>home</span>\n      </div>\n    </Grid.Item>\n    <Grid.Item>\n      <div className="block">\n        <MyIcon type="user" theme="primary" />\n        <span>user</span>\n      </div>\n    </Grid.Item>\n  </Grid>,\n  mountNode,\n);\n```\n\n## 自定义 SVG 图标\n\n可以通过配置 <a href="https://github.com/smooth-code/svgr" target="_blank">svgr</a> 来将 svg 图标作为 React 组件导入。\n\n本示例以 webpack 为参考，使用 <a href="https://www.npmjs.com/package/@svgr/webpack" target="_blank">@svgr/webpack</a> 来实现，其他实现方式请参阅 <a href="https://www.smooth-code.com/open-source/svgr/docs/getting-started/" target="_blank">svgr 文档</a>\n\n```js\n// webpack.config.js\n{\n  test: /\\.svg(\\?v=\\d+\\.\\d+\\.\\d+)?$/,\n  issuer: {\n    test: /\\.jsx?$/,\n  },\n  use: [\n    {\n      loader: \'babel-loader\',\n    },\n    {\n      loader: \'@svgr/webpack\',\n      options: {\n        babel: false,\n        icon: true,\n      },\n    },\n  ],\n},\n```\n\n```jsx\nimport { Icon } from \'zarm\';\nimport { ReactComponent as YourSvg } from \'path/to/yourSvg.svg\'; // path to your \'*.svg\' file.\n\nReactDOM.render(<Icon component={YourSvg} />, mountNode);\n```\n\n### 使用 `font` 模式\n需要手动引入样式文件\n```\n  @import "@zarm-design/icons/style/font";\n```\n\n\n## API\n\n| 属性      | 类型                                                           | 默认值      | 说明                                                              |\n| :-------- | :------------------------------------------------------------- | :---------- | :---------------------------------------------------------------- |\n| theme     | string                                                         | \'default\'   | 主题，可选值 `default`、`primary`、`success`、`warning`、`danger` |\n| size      | string                                                         | -           | 大小，可选值 `sm`、`lg`                                           |\n| type      | string                                                         | -           | 图标类型，可选项为来源 iconfont 的图标名称                        |\n| mode      | string                                                         | \'svg\'       | 模式，可选值 `svg`、`font` 自带 icon 可选                         |\n| component | React.ComponentType&lt;React.SVGProps&lt;SVGSVGElement&gt;&gt; | -           | 本地 svg 文件，需配合 viewBox 使用                                |\n| viewBox   | string                                                         | \'0 0 32 32\' | 自定义 SVG 图标时，用来设置画布的起始坐标及大小                   |\n\n## CSS 变量\n\n| 属性        | 默认值                 | 说明     |\n| :---------- | :--------------------- | :------- |\n| --font-size | \'24px\'                 | 图标大小 |\n| --color     | \'var(--za-color-text)\' | 图标颜色 |\n'}}]);