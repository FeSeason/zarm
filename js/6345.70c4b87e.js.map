{"version":3,"file":"js/6345.70c4b87e.js","mappings":"0GAAA","sources":["webpack://site/../zarm/src/water-mark/demo.md"],"sourcesContent":["export default \"# WaterMark 水印\\n\\n## 基本用法\\n\\n```jsx\\nimport { useRef, useState } from 'react';\\nimport { List, Input, Radio, Switch, Slider, WaterMark } from 'zarm';\\n\\nconst UNILINE_TEXT = '众安科技';\\nconst MULTI_LINE_TEXT = [UNILINE_TEXT, 'ZhongAnTech'];\\n\\nconst WATERMARK_IMAGE_URL = 'https://zarm.design/images/logo.1a6cfc30.svg';\\n\\nconst DEFAULT_PROPS = {\\n  text: UNILINE_TEXT,\\n  mode: 'interval',\\n  monitor: true,\\n  markStyle: {\\n    opacity: 0.15,\\n  },\\n  textStyle: {\\n    textAlign: 'left',\\n  },\\n  imageStyle: {\\n    width: 37.5,\\n    height: 37.5,\\n  },\\n};\\n\\nconst Demo = () => {\\n  const [props, updateProps] = useState(DEFAULT_PROPS);\\n  const [contain, setContain] = useState(false);\\n\\n  const setProps = (data = {}) => {\\n    updateProps({\\n      ...props,\\n      ...data,\\n    });\\n  };\\n\\n  const isMultiline = Array.isArray(props.text);\\n\\n  const content = (\\n    <List>\\n      <List.Item\\n        suffix={\\n          <Radio.Group\\n            value={!!props.image}\\n            compact\\n            type=\\\"button\\\"\\n            onChange={(value) => setProps({ image: value ? WATERMARK_IMAGE_URL : null })}\\n          >\\n            <Radio value={false}>文字</Radio>\\n            <Radio value={true}>图片</Radio>\\n          </Radio.Group>\\n        }\\n      >\\n        水印类型\\n      </List.Item>\\n      {props.image ? (\\n        <>\\n          <List.Item title=\\\"图片地址\\\">\\n            <Input\\n              rows={2}\\n              type=\\\"text\\\"\\n              value={props.image}\\n              placeholder=\\\"请输入图片地址\\\"\\n              onChange={(event) => setProps({ image: event.target.value })}\\n            />\\n          </List.Item>\\n          <List.Item title=\\\"图片宽度\\\">\\n            <Input\\n              type=\\\"number\\\"\\n              value={props.imageStyle.width}\\n              onChange={(event) =>\\n                setProps({\\n                  imageStyle: {\\n                    ...props.imageStyle,\\n                    width: event.target.value,\\n                  },\\n                })\\n              }\\n            />\\n          </List.Item>\\n          <List.Item title=\\\"图片高度\\\">\\n            <Input\\n              type=\\\"number\\\"\\n              value={props.imageStyle.height}\\n              onChange={(event) =>\\n                setProps({\\n                  imageStyle: {\\n                    ...props.imageStyle,\\n                    height: event.target.value,\\n                  },\\n                })\\n              }\\n            />\\n          </List.Item>\\n        </>\\n      ) : (\\n        <>\\n          <List.Item\\n            suffix={\\n              <Radio.Group\\n                value={isMultiline}\\n                compact\\n                type=\\\"button\\\"\\n                onChange={(value) => setProps({ text: value ? MULTI_LINE_TEXT : UNILINE_TEXT })}\\n              >\\n                <Radio value={false}>单行</Radio>\\n                <Radio value={true}>多行</Radio>\\n              </Radio.Group>\\n            }\\n          >\\n            文字水印\\n          </List.Item>\\n          <List.Item title=\\\"水印文案\\\">\\n            <Input\\n              rows={isMultiline ? 3 : 1}\\n              type=\\\"text\\\"\\n              value={isMultiline ? props.text.join('\\\\n') : props.text}\\n              placeholder=\\\"请输入水印文案\\\"\\n              onChange={(event) =>\\n                setProps({\\n                  text: isMultiline ? event.target.value.split('\\\\n') : event.target.value,\\n                })\\n              }\\n            />\\n          </List.Item>\\n          <List.Item\\n            suffix={\\n              <Radio.Group\\n                value={props.textStyle.textAlign}\\n                compact\\n                type=\\\"button\\\"\\n                onChange={(value) => setProps({ textStyle: { textAlign: value } })}\\n              >\\n                <Radio value=\\\"left\\\">居左</Radio>\\n                <Radio value=\\\"center\\\">居中</Radio>\\n                <Radio value=\\\"right\\\">居右</Radio>\\n              </Radio.Group>\\n            }\\n          >\\n            对齐方式\\n          </List.Item>\\n        </>\\n      )}\\n      <List.Item\\n        suffix={\\n          <Radio.Group\\n            value={props.mode}\\n            compact\\n            type=\\\"button\\\"\\n            onChange={(value) => setProps({ mode: value })}\\n          >\\n            <Radio value=\\\"repeat\\\">重复展示</Radio>\\n            <Radio value=\\\"interval\\\">错行展示</Radio>\\n          </Radio.Group>\\n        }\\n      >\\n        渲染模式\\n      </List.Item>\\n      <List.Item title=\\\"透明度\\\">\\n        <Slider\\n          value={props.markStyle.opacity * 100}\\n          onChange={(value) => setProps({ markStyle: { opacity: value / 100 } })}\\n        />\\n      </List.Item>\\n      <List.Item\\n        title=\\\"保护模式\\\"\\n        suffix={\\n          <Switch checked={props.monitor} onChange={(value) => setProps({ monitor: value })} />\\n        }\\n        description=\\\"监听水印变化，防止被篡改\\\"\\n      />\\n      <List.Item\\n        title=\\\"包裹容器\\\"\\n        suffix={<Switch checked={contain} onChange={(value) => setContain(value)} />}\\n      />\\n    </List>\\n  );\\n\\n  return (\\n    <>\\n      {!contain && content}\\n      <WaterMark {...props}>{contain && content}</WaterMark>\\n    </>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## API\\n\\n| 属性       | 类型               | 默认值     | 说明                                                 |\\n| :--------- | :----------------- | :--------- | :--------------------------------------------------- |\\n| mode       | repeat \\\\| interval | 'interval' | 展示模式，interval 表示错行展示                      |\\n| text       | string \\\\| string[] | -          | 水印文本, 为数组时表示多行水印                       |\\n| image      | string             | -          | 图片源，建议导出 2 倍或 3 倍图，优先使用图片渲染水印 |\\n| textStyle  | TextStyle          | -          | 文本样式                                             |\\n| markStyle  | MarkStyle          | -          | 水印样式                                             |\\n| imageStyle | ImageStyle         | -          | 图片样式                                             |\\n| monitor    | boolean            | true       | 是否开启监视模式                                     |\\n\\n## MarkStyle\\n\\n| 属性       | 类型   | 默认值 | 说明                                 |\\n| :--------- | :----- | :----- | :----------------------------------- |\\n| width      | number | 120    | 单个水印宽度                         |\\n| height     | number | 64     | 单个水印高度                         |\\n| opacity    | number | 0.15   | 水印不透明度                         |\\n| rotate     | number | -22    | 旋转的角度                           |\\n| zIndex     | number | 2000   | 样式层级                             |\\n| gapX       | number | 24     | 水印之间的水平间距                   |\\n| gapY       | number | 48     | 水印之间的垂直间距                   |\\n| offsetLeft | number | 0      | 水印在 canvas 画布上绘制的水平偏移量 |\\n| offsetTop  | number | 0      | 水印在 canvas 画布上绘制的垂直偏移量 |\\n\\n## TextStyle\\n\\n| 属性         | 类型             | 默认值       | 说明               |\\n| :----------- | :--------------- | :----------- | :----------------- |\\n| color        | string           | '#000'       | 设置字体颜色       |\\n| fontSize     | number           | 14           | 设置字体大小       |\\n| fontWeight   | string \\\\| number | 300          | 设置字体粗细       |\\n| fontStyle    | string           | 'normal'     | 规定字体样式       |\\n| fontFamily   | string           | 'sans-serif' | 设置水印文字的字体 |\\n| fontVariant  | string           | 'normal'     | 规定字体变体       |\\n| textAlign    | string           | 'left'       | 水印文字的对齐方式 |\\n| textBaseline | string           | 'alphabetic' | 绘制文本的文本基线 |\\n\\n## ImageStyle\\n\\n| 属性   | 类型   | 默认值 | 说明     |\\n| :----- | :----- | :----- | :------- |\\n| width  | number | 120    | 图片宽度 |\\n| height | number | 64     | 图片高度 |\\n\";"],"names":[],"sourceRoot":""}