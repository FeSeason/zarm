{"version":3,"sources":["webpack://site/../zarm/src/date-picker/demo.md"],"names":[],"mappings":"yGAAA","file":"js/260.8d69c821.js","sourcesContent":["export default \"# DatePicker 日期选择器\\n\\n## 基本用法\\n\\n```jsx\\nimport { useRef, useReducer } from 'react';\\nimport { Cell, Button, DatePicker, Toast } from 'zarm';\\n\\nconst initState = {\\n  date: {\\n    visible: false,\\n    value: '',\\n    wheelDefaultValue: '2018-09-13',\\n  },\\n  time: {\\n    visible: false,\\n    value: '',\\n  },\\n  limitDate: {\\n    visible: false,\\n    value: '2017-09-13',\\n  },\\n  specDOM: {\\n    visible: false,\\n    value: '',\\n  },\\n};\\n\\nconst reducer = (state, action) => {\\n  const { type, key, value } = action;\\n\\n  switch (type) {\\n    case 'visible':\\n      return {\\n        ...state,\\n        [key]: {\\n          ...state[key],\\n          visible: !state[key].visible,\\n        },\\n      };\\n\\n    case 'value':\\n      return {\\n        ...state,\\n        [key]: {\\n          ...state[key],\\n          value,\\n        },\\n      };\\n\\n    default:\\n  }\\n};\\n\\nconst Demo = () => {\\n  const myRef = useRef();\\n  const [state, dispatch] = useReducer(reducer, initState);\\n\\n  const setValue = (key, value) => {\\n    dispatch({ type: 'value', key, value });\\n  };\\n\\n  const toggle = (key) => {\\n    dispatch({\\n      type: 'visible',\\n      key,\\n    });\\n  };\\n\\n  return (\\n    <div>\\n      <Cell\\n        description={\\n          <Button size=\\\"xs\\\" onClick={() => toggle('date')}>\\n            选择\\n          </Button>\\n        }\\n      >\\n        选择日期\\n      </Cell>\\n\\n      <Cell\\n        description={\\n          <Button size=\\\"xs\\\" onClick={() => toggle('time')}>\\n            选择\\n          </Button>\\n        }\\n      >\\n        选择时间\\n      </Cell>\\n\\n      <Cell\\n        description={\\n          <Button size=\\\"xs\\\" onClick={() => toggle('limitDate')}>\\n            选择\\n          </Button>\\n        }\\n      >\\n        选择日期(自定义)\\n      </Cell>\\n\\n      <Cell\\n        description={\\n          <Button size=\\\"xs\\\" onClick={() => toggle('specDOM')}>\\n            选择\\n          </Button>\\n        }\\n      >\\n        挂载到指定dom节点\\n      </Cell>\\n\\n      <DatePicker\\n        visible={state.date.visible}\\n        mode=\\\"date\\\"\\n        value={state.date.value}\\n        wheelDefaultValue={state.date.wheelDefaultValue}\\n        onOk={(value) => {\\n          setValue('date', value);\\n          toggle('date');\\n          Toast.show(JSON.stringify(value));\\n        }}\\n        onCancel={() => toggle('date')}\\n      />\\n\\n      <DatePicker\\n        visible={state.time.visible}\\n        mode=\\\"time\\\"\\n        value={state.time.value}\\n        onOk={(value) => {\\n          setValue('time', value);\\n          toggle('time');\\n          Toast.show(JSON.stringify(value));\\n        }}\\n        onCancel={() => toggle('time')}\\n      />\\n\\n      <DatePicker\\n        visible={state.limitDate.visible}\\n        title=\\\"选择日期\\\"\\n        okText=\\\"确定\\\"\\n        cancelText=\\\"取消\\\"\\n        mode=\\\"date\\\"\\n        min=\\\"2007-01-03\\\"\\n        max=\\\"2019-11-23\\\"\\n        value={state.limitDate.value}\\n        onOk={(value) => {\\n          setValue('limitDate', value);\\n          toggle('limitDate');\\n          Toast.show(JSON.stringify(value));\\n        }}\\n        onCancel={() => toggle('limitDate')}\\n      />\\n\\n      <DatePicker\\n        visible={state.specDOM.visible}\\n        value={state.specDOM.value}\\n        onOk={(value) => {\\n          setValue('specDOM', value);\\n          toggle('specDOM');\\n          Toast.show(JSON.stringify(value));\\n        }}\\n        onCancel={() => toggle('specDOM')}\\n        getContainer={() => myRef.current}\\n      />\\n\\n      <div ref={myRef} id=\\\"test-div\\\" style={{ position: 'relative', zIndex: 1 }} />\\n    </div>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## DateSelect 表单日期选择器\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Cell, DateSelect } from 'zarm';\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState('');\\n\\n  return (\\n    <Cell title=\\\"日期选择\\\">\\n      <DateSelect\\n        className=\\\"test-dateSelect\\\"\\n        title=\\\"选择日期\\\"\\n        placeholder=\\\"请选择日期\\\"\\n        mode=\\\"date\\\"\\n        min=\\\"1974-05-16\\\"\\n        max=\\\"2027-05-15\\\"\\n        value={value}\\n        onOk={(value) => {\\n          console.log('DateSelect onOk: ', value);\\n          setValue(value);\\n        }}\\n      />\\n    </Cell>\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## DatePickerView 平铺选择器\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { DatePickerView } from 'zarm';\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState('');\\n\\n  return (\\n    <DatePickerView\\n      mode=\\\"datetime\\\"\\n      value={value}\\n      min=\\\"2018-1-13\\\"\\n      onChange={(value) => {\\n        console.log('datePickerView => ', value);\\n        setValue(value);\\n      }}\\n    />\\n  );\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## API\\n\\n| 属性         | 类型                   | 默认值 | 说明                                                                 |\\n| :----------- | :--------------------- | :----- | :------------------------------------------------------------------- |\\n| value        | string \\\\| Date         | -      | 值                                                                   |\\n| defaultValue | string \\\\| Date         | -      | 初始值                                                               |\\n| mode         | string                 | 'date' | 指定日期选择模式，可选项 `year`, `month`, `date`, `time`, `datetime` |\\n| min          | string \\\\| Date         | -      | 相应 mode 的最小时间                                                 |\\n| max          | string \\\\| Date         | -      | 相应 mode 的最大时间                                                 |\\n| minuteStep   | number                 | 1      | 分钟间隔                                                             |\\n| disabled     | boolean                | false  | 是否禁用                                                             |\\n| onChange     | (value?: Date) => void | -      | 值变化时触发的回调函数                                               |\\n\\n### 仅 DatePicker & DateSelect 支持的属性\\n\\n| 属性              | 类型                                 | 默认值        | 说明                                           |\\n| :---------------- | :----------------------------------- | :------------ | :--------------------------------------------- |\\n| visible           | boolean                              | false         | 是否展示                                       |\\n| title             | string                               | '请选择'      | 选择器标题                                     |\\n| cancelText        | string                               | '取消'        | 取消栏文字                                     |\\n| okText            | string                               | '确定'        | 确定栏文字                                     |\\n| maskClosable      | boolean                              | true          | 是否点击遮罩层时关闭，需要和 onCancel 一起使用 |\\n| wheelDefaultValue | string \\\\| Date                       | -             | 滚轮默认停留的日期位置                         |\\n| onOk              | (value?: Date) => void               | -             | 点击确定时触发的回调函数                       |\\n| onCancel          | () => void                           | -             | 点击取消时触发的回调函数                       |\\n| mountContainer    | HTMLElement &#124; () => HTMLElement | document.body | 指定 DatePicker 挂载的 HTML 节点               |\\n\\n### 仅 DateSelect 支持的属性\\n\\n| 属性        | 类型    | 默认值   | 说明                                                                                                 |\\n| :---------- | :------ | :------- | :--------------------------------------------------------------------------------------------------- |\\n| placeholder | string  | '请选择' | 输入提示信息                                                                                         |\\n| hasArrow    | boolean | true     | 是否显示箭头                                                                                         |\\n| format      | string  | -        | 格式化显示值。例：format=\\\"yyyy 年 MM 月 dd 日\\\"<br /> 年:`yyyy`, 月:`MM`, 日:`dd`, 时:`HH`, 分:`mm`。 |\\n\";"],"sourceRoot":""}