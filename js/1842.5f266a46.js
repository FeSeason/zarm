(self.webpackChunksite=self.webpackChunksite||[]).push([[1842],{51842:function(e,n,i){"use strict";i.r(n),n.default='# FilePicker 文件选择器\n\n## 基本用法\n\n```jsx\nimport { useState } from \'react\';\nimport { Cell, FilePicker } from \'zarm\';\nimport { Plus } from \'@zarm-design/icons\';\n\nconst Demo = () => {\n  const [files, setFiles] = useState([]);\n\n  const onSelect = (file) => {\n    console.log(file);\n    const newFiles = files.concat(file);\n    setFiles(newFiles);\n  };\n\n  return (\n    <>\n      {files.map((item, index) => (\n        <Cell key={+index}>{item.fileName}</Cell>\n      ))}\n      <div className="file-picker-wrapper">\n        <FilePicker className="file-picker-btn" onChange={onSelect}>\n          <Plus size="lg" />\n        </FilePicker>\n      </div>\n    </>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## 多选模式\n\n```jsx\nimport { useState } from \'react\';\nimport { FilePicker, Toast, Badge } from \'zarm\';\nimport { Plus, Close } from \'@zarm-design/icons\';\n\nconst MAX_FILES_COUNT = 5;\n\nconst onBeforeSelect = () => {\n  alert(\'执行 onBeforeSelect 方法\');\n};\n\nconst Demo = () => {\n  const [files, setFiles] = useState([]);\n\n  const onSelect = (selFiles) => {\n    const newFiles = files.concat(selFiles);\n    if (newFiles.length > MAX_FILES_COUNT) {\n      Toast.show(\'最多只能选择5张图片\');\n      return;\n    }\n    setFiles(newFiles);\n  };\n\n  const remove = (index) => {\n    const newFiles = [].concat(files);\n    newFiles.splice(index, 1);\n    setFiles(newFiles);\n    Toast.show(\'删除成功\');\n  };\n\n  const imgRender = () => {\n    return files.map((item, index) => {\n      return (\n        <Badge\n          key={+index}\n          className="file-picker-item"\n          shape="circle"\n          text={\n            <span className="file-picker-closebtn">\n              <Close />\n            </span>\n          }\n          onClick={() => remove(index)}\n        >\n          <div className="file-picker-item-img">\n            <a href={item.thumbnail} target="_blank" rel="noopener noreferrer">\n              <img src={item.thumbnail} alt="" />\n            </a>\n          </div>\n        </Badge>\n      );\n    });\n  };\n\n  return (\n    <div className="file-picker-wrapper">\n      {imgRender()}\n      {files.length < MAX_FILES_COUNT && (\n        <FilePicker\n          multiple\n          className="file-picker-btn"\n          accept="image/*"\n          onBeforeSelect={onBeforeSelect}\n          onChange={onSelect}\n        >\n          <Plus size="lg" />\n        </FilePicker>\n      )}\n    </div>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## 禁用状态\n\n```jsx\nimport { FilePicker, Icon } from \'zarm\';\nimport { Plus } from \'@zarm-design/icons\';\n\nReactDOM.render(\n  <div className="file-picker-wrapper">\n    <FilePicker className="file-picker-btn" disabled>\n      <Plus size="lg" />\n    </FilePicker>\n  </div>,\n  mountNode,\n);\n```\n\n## API\n\n| 属性           | 类型                                | 默认值     | 说明                                                                        |\n| :------------- | :---------------------------------- | :--------- | :-------------------------------------------------------------------------- |\n| accept         | string                              | -          | 允许上传的附件格式                                                          |\n| capture        | string                              | -          | 唤起的原生应用，可选值：照相机`camera`, 摄像机`camcorder`, 录音`microphone` |\n| multiple       | boolean                             | false      | 是否多选                                                                    |\n| disabled       | boolean                             | false      | 是否禁用                                                                    |\n| onBeforeSelect | () => boolean                       | () => true | 选择前触发的事件                                                            |\n| onChange       | (file?: object \\| object[]) => void | -          | 值变化时触发的回调函数                                                      |\n'}}]);