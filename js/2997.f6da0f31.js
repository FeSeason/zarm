"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[2997],{72997:function(n,t,e){e.r(t),t.default="# useClickAway 单击外部跟踪器\n\n## 基本用法\n\n```jsx\nimport { useRef, useState } from 'react';\nimport { useClickAway, List, Button } from 'zarm';\n\nconst Demo = () => {\n  const ref = useRef();\n  const [count, setCount] = useState(0);\n\n  useClickAway(ref, () => {\n    setCount(count + 1);\n    console.log('click away');\n  });\n\n  return (\n    <List>\n      <List.Item\n        title={count}\n        suffix={\n          <Button ref={ref} size=\"sm\">\n            点我外面试试？\n          </Button>\n        }\n      />\n    </List>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## 监听多个元素\n\n```jsx\nimport { useRef, useState } from 'react';\nimport { useClickAway, List, Button } from 'zarm';\n\nconst Demo = () => {\n  const ref1 = useRef();\n  const ref2 = useRef();\n  const [count, setCount] = useState(0);\n\n  useClickAway([ref1, ref2], () => {\n    setCount(count + 1);\n    console.log('click away with multiple targets');\n  });\n\n  return (\n    <List>\n      <List.Item\n        title={count}\n        suffix={\n          <>\n            <Button ref={ref1} size=\"sm\" style={{ marginRight: 10 }}>\n              Button1\n            </Button>\n            <Button ref={ref2} size=\"sm\">\n              Button2\n            </Button>\n          </>\n        }\n      />\n    </List>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| 属性        | 类型                                                  | 默认值  | 说明               |\n| :---------- | :---------------------------------------------------- | :------ | :----------------- |\n| ref         | MutableRefObject\\<HTMLElement\\>                       | -       | 目标元素           |\n| onClickAway | (event: React.TouchEvent \\| React.MouseEvent) => void | -       | 外部区域触发的事件 |\n| eventName   | string                                                | 'click' | 事件名称           |\n"}}]);