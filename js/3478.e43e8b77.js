"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3478],{43478:function(n,e,t){t.r(e),e.default="# useLongPress 长按\n\n## 基本用法\n\n```jsx\nimport { useState } from 'react';\nimport { useLongPress, Button, List } from 'zarm';\n\nconst Demo = () => {\n  const [text, setText] = useState('');\n  const longPressEvent = useLongPress({\n    onLongPress: () => setText('长按了'),\n    onPress: () => setText('单击了'),\n    onClear: () => setText('松开了'),\n  });\n\n  return (\n    <List>\n      <List.Item\n        title={text}\n        suffix={\n          <Button size=\"sm\" style={{ margin: 10 }} {...longPressEvent}>\n            长按我试试？\n          </Button>\n        }\n      />\n    </List>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| 属性             | 类型                              | 默认值 | 说明                           |\n| :--------------- | :-------------------------------- | :----- | :----------------------------- |\n| isPreventDefault | boolean                           | true   | 是否阻止元素发生默认的行为     |\n| delay            | number                            | 300    | 长按延时执行的时间，单位：毫秒 |\n| onLongPress      | (event: TouchEvent \\| MouseEvent) | -      | 长按时触发的事件               |\n| onPress          | (event: TouchEvent \\| MouseEvent) | -      | 单击时触发的事件               |\n| onClear          | (event: TouchEvent \\| MouseEvent) | -      | 松开时触发的事件               |\n"}}]);